//Porgramma gemaaakt tijdens de blockchain
// link naar succes deploy: https://rinkeby.etherscan.io/tx/0x8d3947e7b9a25021b5d28b45dd8365eaf1f097f4e4ea761e06177cd6307678ad
// adres van het contract: 0xb075fecb70e9313b23691d50227ef1d2a21fa214
// infura dashboard: https://infura.io/dashboard

pragma solidity ^0.5.1;
contract SmartContractFranValcke {

address public organizer;
uint  public numRegistrants;
uint public quota;

struct Registrant {
    uint256 price;
    string name;
}

mapping (address => Registrant) registratsPaid;

constructor() public {
    organizer = msg.sender;
    //msg.sender = de persoon die het contract gaat deployen
    quota= 500;
    numRegistrants = 0;
}

function buyTicket(string memory name) public payable returns (bool succes) {
    //Door het keyword payable gaat het contract automatisch betaald worden. Het geld blijft in het contract.
    //Indien je het wil doorsturen naar organiser, kan je he geld doorsturen naar een wallet.
    //Een contract kan ook geld bijhouden
    require(numRegistrants < quota);
    Registrant storage reg = registratsPaid[msg.sender];
    //Waarom storage?  Omdat je een nieuw wil aanmaken en dit opslaan in het geheugen
    //msg.sender hier heeft een andere inhoud als de msg.sender in de consructor
    reg.price = msg.value;
    reg.name= name;
    numRegistrants++;
    return true;
}

}
